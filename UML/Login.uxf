<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLInterface</id><coordinates><x>332</x><y>1180</y><w>180</w><h>190</h></coordinates><panel_attributes>Location: Interface
--
ID: number
Label: string
DescriptiveInformation: string
Address: {
  Postalcode: string,
  City: string;
  Street: string;
};</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLInterface</id><coordinates><x>522</x><y>1180</y><w>180</w><h>220</h></coordinates><panel_attributes>Device: Interface
--
ID: number
Label: string
DescriptiveInformation: string
SerialNumber: string
Manufacturer: string
Model: string
RentStart: Date | string
ExpectedReturn: Date | string
LocationID: number
PersonID: number</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLInterface</id><coordinates><x>712</x><y>1180</y><w>120</w><h>130</h></coordinates><panel_attributes>Person: Interface
--
ID: number
FirstName: string
LastName: string
Company: string</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLInterface</id><coordinates><x>842</x><y>1180</y><w>120</w><h>100</h></coordinates><panel_attributes>LoginData: Interface
--
userName: string
passWord: string</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLInterface</id><coordinates><x>972</x><y>1180</y><w>120</w><h>120</h></coordinates><panel_attributes>UserData: Interface
--
userID: number
userName: string
token: string</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>622</x><y>880</y><w>290</w><h>250</h></coordinates><panel_attributes>LocationsComponent: Class
--
- apiService: ApiService
+ locationList: Array&lt;Location&gt;
+ mutableFilteredLocationList: Array&lt;Location&gt;
+ filterValue: string
+ newLocation: Location
--
+ ngOnInit(): void
- clearLocation(): Location
- prepareLocationList(): void
+ createLocation(location: Location): Promise&lt;void&gt;
+ updateLocation(locationID: number): void
+ prepareFilter(event: any): void
- doFilter(filterValue: string): void
+ cancel(index: number): void
+ deleteLocation(locationID: number): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>322</x><y>880</y><w>290</w><h>250</h></coordinates><panel_attributes>DevicesComponent: Class
--
+ deviceList: Array&lt;Device&gt;
+ mutableFilteredDeviceList: Array&lt;Device&gt;
+ filterValue: string
+ newDevice: Device
- private apiService: ApiService
--
+ ngOnInit(): void
- clearDevice(): Device
- prepareDeviceList(): void
+ createDevice(device: Device): Promise&lt;void&gt;
- updateDevice(deviceID: number): void
- converDateToYMD(date: Date): string
+ prepareFilter(event: any): void
- doFilter(filterValue: string): void
+ cancel(index: number: void)
+ deleteDevice(deviceID: number): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1522</x><y>880</y><w>290</w><h>250</h></coordinates><panel_attributes>CreateUserComponent: Class
--
+ loginData: LoginData
- router: Router
- apiService: ApiService
--
+ ngOnInit(): void
+ createUser(): void
+ routeTo(routerLink: string): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>922</x><y>880</y><w>290</w><h>250</h></coordinates><panel_attributes>PersonsComponent: Class
--
+ personList: Array&lt;Person&gt;
+ mutableFilteredPersonList: Array&lt;Person&gt;
+ filterValue: string
+ newPerson: Person
- apiService: ApiService
--
+ ngOnInit(): void
- clearPerson(): Person
- preparePersonList(): void
+ createPerson(person: Person): Promise&lt;void&gt;
+ updatePerson(personID: number): void
+ prepareFilter(event: any): void
+ cancel(index: number): void
+ deletePerson(personID: number): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1219</x><y>880</y><w>290</w><h>250</h></coordinates><panel_attributes>LoginComponent: Class
--
+ loginData: LoginData
- router: Router
- authService: AuthenticationService
--
+ prepareLogin(asGuest: boolean): Promise&lt;void&gt;
+ routeTo(routerLink: string): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1116</x><y>1150</y><w>310</w><h>320</h></coordinates><panel_attributes>ApiService: Class
--
+ loggedIn: boolean
- httpClient: HttpClient
- localStorage: LocalStorageService
--
+ login(loginData: LoginData): Observable&lt;any&gt;
+ createUser(loginData: LoginData): Observable&lt;any&gt;
+ createDevice(device: Device): Observable&lt;any&gt;
+ getDeviceID(device: Device): Observable&lt;any&gt;
+ deleteDevice(deviceID: string): Observable&lt;any&gt;
+ updateDevice(device: Device): Observable&lt;any&gt;
+ getLocationList(): Observable&lt;any&gt;
+ createLocation(location: Location): Observable&lt;any&gt;
+ getLocationID(location: Location): Observable&lt;any&gt;
+ deleteLocation(locationID: string): Observable&lt;any&gt;
+ updateLocation(location: Location): Observable&lt;any&gt;
+ getPersonList(): Observable&lt;any&gt;
+ createPerson(person: Person): Observable&lt;any&gt;
+ getPersonID(person: Person): Observable&lt;any&gt;
+ deletePerson(personID: string): Observable&lt;any&gt;
+ updatePerson(person: Person): Observable&lt;any&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1436</x><y>1150</y><w>310</w><h>320</h></coordinates><panel_attributes>AuthenticationService: Class
--
+ loggedIn: boolean
- localStorage: LocalStorageService
- apiService: ApiService
--
- updateLoggedIn(): void
+ login(loginData: LoginData): Promise&lt;boolean&gt;
+ logout(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>766</x><y>130</y><w>290</w><h>170</h></coordinates><panel_attributes>StorageService: Class
--
- storage: Storage
- subjects: Map&lt;string, BehaviorSubject &lt;string&gt; &gt;
--
+ initiateStorage(): void
- prepareStorage(key: string): any
+ watch(key: string): Observable&lt;any&gt;
+ get(key: string): string
+ set(key: string, value: any): void
+ remove(key: string): void
+ clear(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>95</x><y>878</y><w>220</w><h>130</h></coordinates><panel_attributes>AppComponent: Class
--
+ title: string
- routeTitles: Array&lt;object&gt;
- router: Router
+ authService: AuthenticationService
- localStorage: LocalStorageService
--
+ ngOnInit(): void
+ logout(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>760</x><y>320</y><w>310</w><h>320</h></coordinates><panel_attributes>ApiService: Class
--
+ loggedIn: boolean
- httpClient: HttpClient
- localStorage: LocalStorageService
--
+ login(loginData: LoginData): Observable&lt;any&gt;
+ createUser(loginData: LoginData): Observable&lt;any&gt;
+ createDevice(device: Device): Observable&lt;any&gt;
+ getDeviceID(device: Device): Observable&lt;any&gt;
+ deleteDevice(deviceID: string): Observable&lt;any&gt;
+ updateDevice(device: Device): Observable&lt;any&gt;
+ getLocationList(): Observable&lt;any&gt;
+ createLocation(location: Location): Observable&lt;any&gt;
+ getLocationID(location: Location): Observable&lt;any&gt;
+ deleteLocation(locationID: string): Observable&lt;any&gt;
+ updateLocation(location: Location): Observable&lt;any&gt;
+ getPersonList(): Observable&lt;any&gt;
+ createPerson(person: Person): Observable&lt;any&gt;
+ getPersonID(person: Person): Observable&lt;any&gt;
+ deletePerson(personID: string): Observable&lt;any&gt;
+ updatePerson(person: Person): Observable&lt;any&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>690</x><y>270</y><w>100</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;80;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>390</x><y>230</y><w>310</w><h>130</h></coordinates><panel_attributes>AuthenticationService: Class
--
+ loggedIn: boolean
- localStorage: LocalStorageService
- apiService: ApiService
--
- updateLoggedIn(): void
+ login(loginData: LoginData): Promise&lt;boolean&gt;
+ logout(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>690</x><y>330</y><w>90</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;70;10</additional_attributes></element></diagram>